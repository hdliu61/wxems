<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdliu.wxems.dao.TReplyMapper">
  <resultMap id="BaseResultMap" type="com.hdliu.wxems.entity.TReply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="reply_user_id" jdbcType="INTEGER" property="replyUserId" />
    <result column="thread_id" jdbcType="INTEGER" property="threadId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="statue" jdbcType="BIT" property="statue" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hdliu.wxems.entity.TReply">
    <result column="context" jdbcType="LONGVARCHAR" property="context" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, reply_user_id, thread_id, title, create_time, edit_time, statue
  </sql>
  <sql id="Blob_Column_List">
    context
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hdliu.wxems.entity.TReplyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hdliu.wxems.entity.TReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hdliu.wxems.entity.TReplyExample">
    delete from t_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hdliu.wxems.entity.TReply">
    insert into t_reply (id, reply_user_id, thread_id, 
      title, create_time, edit_time, 
      statue, context)
    values (#{id,jdbcType=INTEGER}, #{replyUserId,jdbcType=INTEGER}, #{threadId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{editTime,jdbcType=TIMESTAMP}, 
      #{statue,jdbcType=BIT}, #{context,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hdliu.wxems.entity.TReply">
    insert into t_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="replyUserId != null">
        reply_user_id,
      </if>
      <if test="threadId != null">
        thread_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="statue != null">
        statue,
      </if>
      <if test="context != null">
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="replyUserId != null">
        #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="threadId != null">
        #{threadId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statue != null">
        #{statue,jdbcType=BIT},
      </if>
      <if test="context != null">
        #{context,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hdliu.wxems.entity.TReplyExample" resultType="java.lang.Long">
    select count(*) from t_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_reply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.replyUserId != null">
        reply_user_id = #{record.replyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.threadId != null">
        thread_id = #{record.threadId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.editTime != null">
        edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statue != null">
        statue = #{record.statue,jdbcType=BIT},
      </if>
      <if test="record.context != null">
        context = #{record.context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_reply
    set id = #{record.id,jdbcType=INTEGER},
      reply_user_id = #{record.replyUserId,jdbcType=INTEGER},
      thread_id = #{record.threadId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      statue = #{record.statue,jdbcType=BIT},
      context = #{record.context,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_reply
    set id = #{record.id,jdbcType=INTEGER},
      reply_user_id = #{record.replyUserId,jdbcType=INTEGER},
      thread_id = #{record.threadId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      statue = #{record.statue,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hdliu.wxems.entity.TReply">
    update t_reply
    <set>
      <if test="replyUserId != null">
        reply_user_id = #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="threadId != null">
        thread_id = #{threadId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statue != null">
        statue = #{statue,jdbcType=BIT},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hdliu.wxems.entity.TReply">
    update t_reply
    set reply_user_id = #{replyUserId,jdbcType=INTEGER},
      thread_id = #{threadId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      statue = #{statue,jdbcType=BIT},
      context = #{context,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hdliu.wxems.entity.TReply">
    update t_reply
    set reply_user_id = #{replyUserId,jdbcType=INTEGER},
      thread_id = #{threadId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      statue = #{statue,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>