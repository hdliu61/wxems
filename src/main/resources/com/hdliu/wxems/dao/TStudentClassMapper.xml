<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdliu.wxems.dao.TStudentClassMapper">
  <resultMap id="BaseResultMap" type="com.hdliu.wxems.entity.TStudentClass">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="teacher_class_id" jdbcType="INTEGER" property="teacherClassId" />
    <result column="group" jdbcType="BIT" property="group" />
    <result column="role" jdbcType="BIT" property="role" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, teacher_class_id, group, role
  </sql>
  <select id="selectByExample" parameterType="com.hdliu.wxems.entity.TStudentClassExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_student_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_student_class
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_student_class
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hdliu.wxems.entity.TStudentClassExample">
    delete from t_student_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hdliu.wxems.entity.TStudentClass">
    insert into t_student_class (id, teacher_class_id, group, 
      role)
    values (#{id,jdbcType=INTEGER}, #{teacherClassId,jdbcType=INTEGER}, #{group,jdbcType=BIT}, 
      #{role,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.hdliu.wxems.entity.TStudentClass">
    insert into t_student_class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="teacherClassId != null">
        teacher_class_id,
      </if>
      <if test="group != null">
        group,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teacherClassId != null">
        #{teacherClassId,jdbcType=INTEGER},
      </if>
      <if test="group != null">
        #{group,jdbcType=BIT},
      </if>
      <if test="role != null">
        #{role,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hdliu.wxems.entity.TStudentClassExample" resultType="java.lang.Long">
    select count(*) from t_student_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_student_class
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.teacherClassId != null">
        teacher_class_id = #{record.teacherClassId,jdbcType=INTEGER},
      </if>
      <if test="record.group != null">
        group = #{record.group,jdbcType=BIT},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_student_class
    set id = #{record.id,jdbcType=INTEGER},
      teacher_class_id = #{record.teacherClassId,jdbcType=INTEGER},
      group = #{record.group,jdbcType=BIT},
      role = #{record.role,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hdliu.wxems.entity.TStudentClass">
    update t_student_class
    <set>
      <if test="teacherClassId != null">
        teacher_class_id = #{teacherClassId,jdbcType=INTEGER},
      </if>
      <if test="group != null">
        group = #{group,jdbcType=BIT},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hdliu.wxems.entity.TStudentClass">
    update t_student_class
    set teacher_class_id = #{teacherClassId,jdbcType=INTEGER},
      group = #{group,jdbcType=BIT},
      role = #{role,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>